service:
  name: cakih-ts
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1

iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem


##############
#
# APP
#
#
functions:
  produtoGetAll:
    handler: handler.getAll
    events:
      - http:
          cors: false
          method: get
          path: /v1/produtos
          authorizer:
            identitySource: method.request.header.Authorization
            arn: arn:aws:cognito-idp:us-east-1:335415263687:userpool/us-east-1_XvDJ4vV7h
  pedidoCreate:
    handler: pedido.create
    events:
      - http:
          cors: false
          method: post
          path: /v1/pedidos
          authorizer:
            identitySource: method.request.header.Authorization
            arn: arn:aws:cognito-idp:us-east-1:335415263687:userpool/us-east-1_XvDJ4vV7h
  pedidoUpdate:
    handler: pedido.update
    events:
      - http:
          cors: false
          method: put
          path: /v1/pedidos/{idPedido}
          parameters: 
             paths: 
               idPedido: true
          authorizer:
            identitySource: method.request.header.Authorization
            arn: arn:aws:cognito-idp:us-east-1:335415263687:userpool/us-east-1_XvDJ4vV7h
  pedidoGetById:
    handler: pedido.getByid
    events:
      - http:
          cors: false
          method: get
          path: /v1/pedidos/{idPedido}
          parameters: 
             paths: 
               idPedido: true
          authorizer:
            identitySource: method.request.header.Authorization
            arn: arn:aws:cognito-idp:us-east-1:335415263687:userpool/us-east-1_XvDJ4vV7h
  pedidoDelete:
    handler: pedido.deleteByid
    events:
      - http:
          cors: false
          method: delete
          path: /v1/pedidos/{idPedido}
          parameters: 
            paths: 
              idPedido: true
          authorizer:
            identitySource: method.request.header.Authorization
            arn: arn:aws:cognito-idp:us-east-1:335415263687:userpool/us-east-1_XvDJ4vV7h
  pedidoProdutoCreate:
    handler: pedido.createPedidoProduto
    events:
      - http:
          cors: false
          method: post
          path: /v1/pedidos/{idPedido}/produtos
          parameters: 
            paths: 
              idPedido: true
          authorizer:
            identitySource: method.request.header.Authorization
            arn: arn:aws:cognito-idp:us-east-1:335415263687:userpool/us-east-1_XvDJ4vV7h
  pedidoProdutoDelete:
    handler: pedido.deletarPedidoProduto
    events:
      - http:
          cors: false
          method: delete
          path: /v1/pedidos/{idPedido}/produtos/{idProduto}
          parameters: 
            paths: 
              idPedido: true
              idProduto: true
          authorizer:
            identitySource: method.request.header.Authorization
            arn: arn:aws:cognito-idp:us-east-1:335415263687:userpool/us-east-1_XvDJ4vV7h



  # clienteEnderecoGetAll:
  #   handler: cliente.getAll
  #   events:
  #     - http:
  #         cors: false
  #         method: get
  #         path: /v1/clientes
  # clienteCreate:
  #   handler: cliente.create
  #   events:
  #     - http:
  #         cors: false
  #         method: post
  #         path: /v1/clientes
  # clientUpdate:
  #   handler: cliente.update
  #   events:
  #     - http:
  #         cors: false
  #         method: put
  #         path: /v1/clientes/{idCliente}
  #         parameters: 
  #            paths: 
  #              idCliente: true
  # clientGetById:
  #   handler: cliente.getById
  #   events:
  #     - http:
  #         cors: false
  #         method: get
  #         path: /v1/clientes/{idCliente}
  #         parameters: 
  #            paths: 
  #              idCliente: true
  # clienteDelete:
  #   handler: cliente.deleteById
  #   events:
  #     - http:
  #         cors: false
  #         method: delete
  #         path: /v1/clientes/{idCliente}
  #         parameters: 
  #           paths: 
  #             idCliente: true



  produtoCreate:
    handler: handler.create
    events:
      - http:
          cors: false
          method: post
          path: /v1/produtos
          authorizer:
            identitySource: method.request.header.Authorization
            arn: arn:aws:cognito-idp:us-east-1:335415263687:userpool/us-east-1_XvDJ4vV7h
  produtoUpdate:
    handler: handler.update
    events:
      - http:
          cors: false
          method: put
          path: /v1/produtos/{idProduto}
          parameters: 
             paths: 
               idProduto: true
          authorizer:
            identitySource: method.request.header.Authorization
            arn: arn:aws:cognito-idp:us-east-1:335415263687:userpool/us-east-1_XvDJ4vV7h
  produtoUpdateByS3:
    handler: handler.updateByS3
    events:
      - s3:
          bucket: cakih-migration
          event: s3:ObjectCreated:*
          rules:
            - suffix: .csv
  produtoGetById:
    handler: handler.getByid
    events:
      - http:
          cors: false
          method: get
          path: /v1/produtos/{idProduto}
          parameters: 
             paths: 
               idProduto: true
          authorizer:
            identitySource: method.request.header.Authorization
            arn: arn:aws:cognito-idp:us-east-1:335415263687:userpool/us-east-1_XvDJ4vV7h
  produtoDelete:
    handler: handler.deleteByid
    events:
      - http:
          cors: false
          method: delete
          path: /v1/produtos/{idProduto}
          parameters: 
            paths: 
              idProduto: true
          authorizer:
            identitySource: method.request.header.Authorization
            arn: arn:aws:cognito-idp:us-east-1:335415263687:userpool/us-east-1_XvDJ4vV7h
  pedidoGetAll:
    handler: pedido.getAll
    events:
      - http:
          cors: false
          method: get
          path: /v1/pedidos
          authorizer:
            identitySource: method.request.header.Authorization
            arn: arn:aws:cognito-idp:us-east-1:335415263687:userpool/us-east-1_XvDJ4vV7h
  clienteGetAll:
    handler: cliente.getAll
    events:
      - http:
          cors: false
          method: get
          path: /v1/clientes
  clienteCreate:
    handler: cliente.create
    events:
      - cognitoUserPool:
          pool: cakih-dev
          trigger: PreSignUp
          existing: true
    # events:
    #   - http:
    #       cors: false
    #       method: post
    #       path: /v1/clientes
  clientUpdate:
    handler: cliente.update
    events:
      - http:
          cors: false
          method: put
          path: /v1/clientes/{idCliente}
          parameters: 
             paths: 
               idCliente: true
  clientGetById:
    handler: cliente.getById
    events:
      - http:
          cors: false
          method: get
          path: /v1/clientes/{idCliente}
          parameters: 
             paths: 
               idCliente: true
  clienteDelete:
    handler: cliente.deleteById
    events:
      - http:
          cors: false
          method: delete
          path: /v1/clientes/{idCliente}
          parameters: 
            paths: 
              idCliente: true



              